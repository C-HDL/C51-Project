C51 COMPILER V9.01   WIFI_CONTROL                                                          05/16/2024 13:37:40 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE WIFI_CONTROL
OBJECT MODULE PLACED IN .\Obj\wifi_control.obj
COMPILER INVOKED BY: E:\keilc51\C51\BIN\C51.EXE App_Demo\wifi_control.c BROWSE INCDIR(.\App\24c02;.\App\iic;.\App\key;.\
                    -App\smg;.\Public;.\App\ds18b20;.\App_Demo) DEBUG OBJECTEXTEND PRINT(.\Obj\wifi_control.lst) OBJECT(.\Obj\wifi_control.ob
                    -j)

line level    source

   1          #include "wifi_control.h"
   2          #include "uart.h"
   3          #include "timer.h"
   4          //定义全局变量
   5          u16 global_OUT1_SEL;
   6          u16 global_OUT2_SEL;
   7          //u16 global_OUT3_SEL;
   8          //定义输出管脚
   9          sbit OUT1=P2^0;
  10          sbit OUT2=P2^1;
  11          //sbit OUT3=P2^2;
  12          //定义WIFI控制命令
  13          #define OUT1_ON_CMD_5min        '1'
  14          #define OUT1_ON_CMD_10min       '2'
  15          #define OUT1_OFF_CMD            '3'
  16          #define OUT2_ON_CMD_5min        '4'
  17          #define OUT2_ON_CMD_10min       '5'
  18          #define OUT2_OFF_CMD            '6'
  19          //#define OUT3_ON_CMD_5min      '7'
  20          //#define OUT3_ON_CMD_10min     '8'
  21          //#define OUT3_OFF_CMD          '9'
  22                                                                                   
  23          
  24          //ESP8266 WIFI发送AT指令
  25          //pbuf：AT指令，字符串格式，如："AT"
  26          void ESP8266_SendCmd(u8 *pbuf)
  27          {
  28   1              while(*pbuf!='\0') //遇到空格跳出循环   
  29   1              {
  30   2                      UART_SendData(*pbuf);
  31   2                      delay_10us(5);
  32   2                      pbuf++; 
  33   2              }
  34   1              delay_10us(5);
  35   1              UART_SendData('\r');//回车
  36   1              delay_10us(5);
  37   1              UART_SendData('\n');//换行
  38   1              delay_ms(1000);
  39   1      }
  40          
  41          //ESP8266 WIFI发送数据到APP
  42          //pbuf：数据
  43          void ESP8266_SendData(u8 *pbuf)
  44          {
  45   1              ESP8266_SendCmd("AT+CIPSEND=0,7");
  46   1              while(*pbuf!='\0') //遇到空格跳出循环   
  47   1              {
  48   2                      UART_SendData(*pbuf);
  49   2                      delay_10us(5);
  50   2                      pbuf++; 
  51   2              }
  52   1              UART_SendData('\n');//换行      
  53   1      //      delay_ms(10);
C51 COMPILER V9.01   WIFI_CONTROL                                                          05/16/2024 13:37:40 PAGE 2   

  54   1      }
  55          
  56          //ESP8266-WIFI模块工作模式初始化
  57          void ESP8266_ModeInit(void)
  58          {
  59   1              ESP8266_SendCmd("AT+CWMODE=2");//设置路由器模式 1 staTIon模式 2 AP点 路由器模式 3 station+AP混合模式
  60   1              ESP8266_SendCmd("AT+CWSAP=\"DaChuang\",\"123456789\",11,0"); //设置WIFI热点名及密码
  61   1              ESP8266_SendCmd("AT+CIPAP=\"192.168.4.1\"");
  62   1      //      ESP8266_SendCmd("AT+RST");//重新启动wifi模块
  63   1      //      delay_ms(2000);
  64   1              ESP8266_SendCmd("AT+CIPMUX=1"); //开启多连接模式，允许多个各客户端接入
  65   1              ESP8266_SendCmd("AT+CIPSERVER=1,8080"); //启动TCP/IP 端口为8080 实现基于网络控制        
  66   1      } 
  67          
  68          //WIFI控制初始化
  69          void wifi_control_init(void)
  70          {
  71   1              UART_Init();
  72   1              time0_init();   
  73   1              ESP8266_ModeInit();
  74   1              ES=1;//允许串口中断
  75   1      }
  76          
  77          //串口中断服务函数
  78          //接收手机APP发送的信号后控制板载资源
  79          void UART_IRQn() interrupt 4
  80          {
  81   1              static u8 i=0;
  82   1      
  83   1              if(RI)
  84   1              {
  85   2                      RI=0;
  86   2                      //读取接收到的数据
  87   2                      UART_RX_BUF[i]=SBUF;
  88   2                      //数据格式内容为：+IPD,ID号,发送数据长度:数据   控制OUT1_ON_CMD_5min的指令：+IPD,0,1:1
  89   2                      if(UART_RX_BUF[0]=='+')i++;//判断第一位是否为+
  90   2                      else i=0;
  91   2                      if(i==10)
  92   2                      {
  93   3                              i=0;
  94   3                              //WIFI控制
  95   3                              if(UART_RX_BUF[9]==OUT1_ON_CMD_5min||UART_RX_BUF[9]==OUT1_ON_CMD_10min)//判断第十位的数据
  96   3                                      {
  97   4                                              global_OUT1_SEL=UART_RX_BUF[9];
  98   4                                              OUT1=1;
  99   4                                      }
 100   3                              else if(UART_RX_BUF[9]==OUT1_OFF_CMD)
 101   3                                      OUT1=0; 
 102   3                              if(UART_RX_BUF[9]==OUT2_ON_CMD_5min||UART_RX_BUF[9]==OUT2_ON_CMD_10min)
 103   3                                      {
 104   4                                              global_OUT2_SEL=UART_RX_BUF[9];
 105   4                                              OUT2=1;
 106   4                                      }
 107   3                              else if(UART_RX_BUF[9]==OUT2_OFF_CMD)
 108   3                                      OUT2=0; 
 109   3      //                      if(UART_RX_BUF[9]==OUT3_ON_CMD_5min||UART_RX_BUF[9]==OUT3_ON_CMD_10min)
 110   3      //                              {
 111   3      //                                      global_OUT3_SEL=UART_RX_BUF[9];
 112   3      //                                      OUT3=1;
 113   3      //                              }
 114   3      //                      else if(UART_RX_BUF[9]==OUT3_OFF_CMD)
 115   3      //                              OUT3=0;         
C51 COMPILER V9.01   WIFI_CONTROL                                                          05/16/2024 13:37:40 PAGE 3   

 116   3                      }                       
 117   2              }       
 118   1      }
 119          
 120          void time0() interrupt 1 //定时器0中断函数
 121          {
 122   1              static u16 i,j,k;//定义静态变量i
 123   1              TH0=0XFC; //给定时器赋初值，定时1ms
 124   1              TL0=0X18;
 125   1              if(global_OUT1_SEL==OUT1_ON_CMD_5min)
 126   1              {
 127   2                      if(OUT1==1)
 128   2                      {
 129   3                              i++;
 130   3                              if(i==300000)
 131   3                              {
 132   4                                      i=0;
 133   4                                      OUT1=0;
 134   4                              }
 135   3                      }
 136   2              }
 137   1              else if(global_OUT1_SEL==OUT1_ON_CMD_10min)
 138   1              {
 139   2                      if(OUT1==1)
 140   2                      {
 141   3                              i++;
 142   3                              if(i==600000)
 143   3                              {
 144   4                                      i=0;
 145   4                                      OUT1=0;
 146   4                              }
 147   3                      }
 148   2              }
 149   1              if(global_OUT2_SEL==OUT2_ON_CMD_5min)
 150   1              {
 151   2                      if(OUT2==1)
 152   2                      {
 153   3                              j++;
 154   3                              if(j==5000)
 155   3                              {
 156   4                                      j=0;
 157   4                                      OUT2=0;
 158   4                              }
 159   3                      }
 160   2              }
 161   1              else if(global_OUT2_SEL==OUT2_ON_CMD_10min)
 162   1              {
 163   2                      if(OUT2==1)
 164   2                      {
 165   3                              j++;
 166   3                              if(j==10000)
 167   3                              {
 168   4                                      j=0;
 169   4                                      OUT2=0;
 170   4                              }
 171   3                      }
 172   2              }
 173   1      //      if(global_OUT3_SEL==OUT3_ON_CMD_5min)
 174   1      //      {
 175   1      //              if(OUT3==1)
 176   1      //              {
 177   1      //                      k++;
C51 COMPILER V9.01   WIFI_CONTROL                                                          05/16/2024 13:37:40 PAGE 4   

 178   1      //                      if(k==5000)
 179   1      //                      {
 180   1      //                              k=0;
 181   1      //                              OUT3=0;
 182   1      //                      }
 183   1      //              }
 184   1      //      }
 185   1      //      else if(global_OUT3_SEL==OUT3_ON_CMD_10min)
 186   1      //      {
 187   1      //              if(OUT3==1)
 188   1      //              {
 189   1      //                      k++;
 190   1      //                      if(k==10000)
 191   1      //                      {
 192   1      //                              k=0;
 193   1      //                              OUT3=0;
 194   1      //                      }
 195   1      //              }
 196   1      //      }
 197   1      }
*** WARNING C280 IN LINE 122 OF APP_DEMO\WIFI_CONTROL.C: 'k': unreferenced local variable


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    498    ----
   CONSTANT SIZE    =    119    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
